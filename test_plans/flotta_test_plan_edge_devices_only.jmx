<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Flotta Test Plan - Edge Devices only" enabled="true">
      <stringProp name="TestPlan.comments">The test plan will not include edge deployments creation</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HTTP_SERVER" elementType="Argument">
            <stringProp name="Argument.name">HTTP_SERVER</stringProp>
            <stringProp name="Argument.value">localhost:8084</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
        <collectionProp name="UserParameters.names">
          <stringProp name="1480783578">HTTP_SERVER</stringProp>
          <stringProp name="-1031304506">HTTP_SERVER_PORT</stringProp>
          <stringProp name="-161397685">OCP_API_SERVER</stringProp>
          <stringProp name="504779657">OCP_API_PORT</stringProp>
          <stringProp name="-1135032042">LABEL_NAME</stringProp>
          <stringProp name="-818867162">LABEL_VALUE</stringProp>
          <stringProp name="-256154309">NAMESPACE</stringProp>
          <stringProp name="-671461751">DEPLOYMENTS_PER_DEVICE</stringProp>
          <stringProp name="-362882240">TEST_DIR</stringProp>
          <stringProp name="1854363798">SCRIPTS_DIR</stringProp>
          <stringProp name="799845044">REGISTRATION_FOLDER</stringProp>
          <stringProp name="799845045">GET_UPDATES_FOLDER</stringProp>
          <stringProp name="799845046">HEARTBEAT_FOLDER</stringProp>
          <stringProp name="799845047">CERTS_FOLDER</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="-856401715">
            <stringProp name="-2075675906">${__P(HTTP_SERVER,flotta-operator-controller-manager-flotta-operator-system.apps.mycluster.redhat.com)}</stringProp>
            <stringProp name="1153133027">${__P(HTTP_SERVER_PORT,80)}</stringProp>
            <stringProp name="-1649297033">${__P(OCP_API_SERVER,api.mycluster.redhat.com)}</stringProp>
            <stringProp name="1301098501">${__P(OCP_API_PORT,6443)}</stringProp>
            <stringProp name="-934795532">region</stringProp>
            <stringProp name="3116868">emea</stringProp>
            <stringProp name="1544803905">default</stringProp>
            <stringProp name="-936568665">${__P(DEPLOYMENTS_PER_DEVICE,10)}</stringProp>
            <stringProp name="-110055682">${__P(TEST_DIR,test_dir_delete_me)}</stringProp>
            <stringProp name="2079559965">${__P(SCRIPTS_DIR,.)}</stringProp>
            <stringProp name="2048852853">${__P(REGISTRATION_FOLDER,./registration)}</stringProp>
            <stringProp name="2048852854">${__P(GET_UPDATES_FOLDER,./get_updates)}</stringProp>
            <stringProp name="2048852855">${__P(HEARTBEAT_FOLDER,./heartbeat)}</stringProp>
            <stringProp name="2048852856">${__P(CERTS_FOLDER,./certs)}</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Edge Devices" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(ITERATIONS,180)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(EDGE_DEVICES_COUNT,10000)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP_UP_TIME,2000)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Create Stdout and Stderr files OS Process Sampler" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">/bin/bash</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">-c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${SCRIPTS_DIR}/create_output_streams.sh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="REGISTRATION_FOLDER" elementType="Argument">
                <stringProp name="Argument.name">REGISTRATION_FOLDER</stringProp>
                <stringProp name="Argument.value">${REGISTRATION_FOLDER}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GET_UPDATES_FOLDER" elementType="Argument">
                <stringProp name="Argument.name">GET_UPDATES_FOLDER</stringProp>
                <stringProp name="Argument.value">${GET_UPDATES_FOLDER}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="HEARTBEAT_FOLDER" elementType="Argument">
                <stringProp name="Argument.name">HEARTBEAT_FOLDER</stringProp>
                <stringProp name="Argument.value">${HEARTBEAT_FOLDER}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DEVICE_ID" elementType="Argument">
                <stringProp name="Argument.name">DEVICE_ID</stringProp>
                <stringProp name="Argument.value">${DEVICE_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
        </SystemSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller - Device Registration" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Generate Device Information" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1483131996">DEVICE_ID</stringProp>
              <stringProp name="-933757957">PRODUCT_NAME</stringProp>
              <stringProp name="815223286">SERIAL_NAME</stringProp>
              <stringProp name="482823219">HOSTNAME</stringProp>
              <stringProp name="-115359763">MAC_ADDRESS1</stringProp>
              <stringProp name="-115359762">MAC_ADDRESS2</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="232790171">
                <stringProp name="118040362">${__UUID()}</stringProp>
                <stringProp name="974807112">${__RandomString(10,abcdefg)}</stringProp>
                <stringProp name="974807112">${__RandomString(10,abcdefg)}</stringProp>
                <stringProp name="-914205160">${__RandomString(10,abcdefg)}.${__RandomString(5,abcdefg)}.flotta</stringProp>
                <stringProp name="1355597914">${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}</stringProp>
                <stringProp name="1355597914">${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}:${__RandomString(2, ABCDEF0123456789)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
            <stringProp name="TestPlan.comments">The device ID to be used for the entire scenario of a specific device and additional device properties</stringProp>
          </UserParameters>
          <hashTree/>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Device Registration  OS Process Sampler" enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">/bin/bash</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">-c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${SCRIPTS_DIR}/register_device.sh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REQUEST_PATH" elementType="Argument">
                  <stringProp name="Argument.name">REQUEST_PATH</stringProp>
                  <stringProp name="Argument.value">api/flotta-management/v1/data/${DEVICE_ID}/in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DEVICE_ID" elementType="Argument">
                  <stringProp name="Argument.name">DEVICE_ID</stringProp>
                  <stringProp name="Argument.value">${DEVICE_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="HTTP_SERVER" elementType="Argument">
                  <stringProp name="Argument.name">HTTP_SERVER</stringProp>
                  <stringProp name="Argument.value">${HTTP_SERVER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="HTTP_SERVER_PORT" elementType="Argument">
                  <stringProp name="Argument.name">HTTP_SERVER_PORT</stringProp>
                  <stringProp name="Argument.value">${HTTP_SERVER_PORT}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PAYLOAD" elementType="Argument">
                  <stringProp name="Argument.name">PAYLOAD</stringProp>
                  <stringProp name="Argument.value">{    &quot;content&quot;: {        &quot;hardware&quot;: {            &quot;boot&quot;: {                &quot;current_boot_mode&quot;: &quot;bios&quot;            },            &quot;cpu&quot;: {                &quot;architecture&quot;: &quot;x86_64&quot;,                &quot;count&quot;: 8,                &quot;flags&quot;: [                    &quot;fpu&quot;,                    &quot;vme&quot;,                    &quot;de&quot;,                    &quot;pse&quot;,                    &quot;tsc&quot;,                    &quot;msr&quot;,                    &quot;pae&quot;,                    &quot;mce&quot;,                    &quot;cx8&quot;,                    &quot;apic&quot;,                    &quot;sep&quot;,                    &quot;mtrr&quot;,                    &quot;pge&quot;,                    &quot;mca&quot;,                    &quot;cmov&quot;,                    &quot;pat&quot;,                    &quot;pse36&quot;,                    &quot;clflush&quot;,                    &quot;dts&quot;,                    &quot;acpi&quot;,                    &quot;mmx&quot;,                    &quot;fxsr&quot;,                    &quot;sse&quot;,                    &quot;sse2&quot;,                    &quot;ss&quot;,                    &quot;ht&quot;,                    &quot;tm&quot;,                    &quot;pbe&quot;,                    &quot;syscall&quot;,                    &quot;nx&quot;,                    &quot;pdpe1gb&quot;,                    &quot;rdtscp&quot;,                    &quot;lm&quot;,                    &quot;constant_tsc&quot;,                    &quot;art&quot;,                    &quot;arch_perfmon&quot;,                    &quot;pebs&quot;,                    &quot;bts&quot;,                    &quot;rep_good&quot;,                    &quot;nopl&quot;,                    &quot;xtopology&quot;,                    &quot;nonstop_tsc&quot;,                    &quot;cpuid&quot;,                    &quot;aperfmperf&quot;,                    &quot;pni&quot;,                    &quot;pclmulqdq&quot;,                    &quot;dtes64&quot;,                    &quot;monitor&quot;,                    &quot;ds_cpl&quot;,                    &quot;vmx&quot;,                    &quot;smx&quot;,                    &quot;est&quot;,                    &quot;tm2&quot;,                    &quot;ssse3&quot;,                    &quot;sdbg&quot;,                    &quot;fma&quot;,                    &quot;cx16&quot;,                    &quot;xtpr&quot;,                    &quot;pdcm&quot;,                    &quot;pcid&quot;,                    &quot;sse4_1&quot;,                    &quot;sse4_2&quot;,                    &quot;x2apic&quot;,                    &quot;movbe&quot;,                    &quot;popcnt&quot;,                    &quot;tsc_deadline_timer&quot;,                    &quot;aes&quot;,                    &quot;xsave&quot;,                    &quot;avx&quot;,                    &quot;f16c&quot;,                    &quot;rdrand&quot;,                    &quot;lahf_lm&quot;,                    &quot;abm&quot;,                    &quot;3dnowprefetch&quot;,                    &quot;cpuid_fault&quot;,                    &quot;epb&quot;,                    &quot;invpcid_single&quot;,                    &quot;pti&quot;,                    &quot;ssbd&quot;,                    &quot;ibrs&quot;,                    &quot;ibpb&quot;,                    &quot;stibp&quot;,                    &quot;tpr_shadow&quot;,                    &quot;vnmi&quot;,                    &quot;flexpriority&quot;,                    &quot;ept&quot;,                    &quot;vpid&quot;,                    &quot;ept_ad&quot;,                    &quot;fsgsbase&quot;,                    &quot;tsc_adjust&quot;,                    &quot;bmi1&quot;,                    &quot;hle&quot;,                    &quot;avx2&quot;,                    &quot;smep&quot;,                    &quot;bmi2&quot;,                    &quot;erms&quot;,                    &quot;invpcid&quot;,                    &quot;rtm&quot;,                    &quot;mpx&quot;,                    &quot;rdseed&quot;,                    &quot;adx&quot;,                    &quot;smap&quot;,                    &quot;clflushopt&quot;,                    &quot;intel_pt&quot;,                    &quot;xsaveopt&quot;,                    &quot;xsavec&quot;,                    &quot;xgetbv1&quot;,                    &quot;xsaves&quot;,                    &quot;dtherm&quot;,                    &quot;ida&quot;,                    &quot;arat&quot;,                    &quot;pln&quot;,                    &quot;pts&quot;,                    &quot;hwp&quot;,                    &quot;hwp_notify&quot;,                    &quot;hwp_act_window&quot;,                    &quot;hwp_epp&quot;,                    &quot;md_clear&quot;,                    &quot;flush_l1d&quot;                ],                &quot;frequency&quot;: 3600,                &quot;model_name&quot;: &quot;Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz&quot;            },            &quot;disks&quot;: [                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-0&quot;,                    &quot;name&quot;: &quot;dm-0&quot;,                    &quot;path&quot;: &quot;/dev/dm-0&quot;,                    &quot;size_bytes&quot;: 511032950784,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-0\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-0: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-1&quot;,                    &quot;name&quot;: &quot;dm-1&quot;,                    &quot;path&quot;: &quot;/dev/dm-1&quot;,                    &quot;size_bytes&quot;: 117440512,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-1\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-1: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-10&quot;,                    &quot;name&quot;: &quot;dm-10&quot;,                    &quot;path&quot;: &quot;/dev/dm-10&quot;,                    &quot;size_bytes&quot;: 6576668672,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-10\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-10: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-2&quot;,                    &quot;name&quot;: &quot;dm-2&quot;,                    &quot;path&quot;: &quot;/dev/dm-2&quot;,                    &quot;size_bytes&quot;: 477232103424,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-2\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-2: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-3&quot;,                    &quot;name&quot;: &quot;dm-3&quot;,                    &quot;path&quot;: &quot;/dev/dm-3&quot;,                    &quot;size_bytes&quot;: 477232103424,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-3\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-3: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-4&quot;,                    &quot;name&quot;: &quot;dm-4&quot;,                    &quot;path&quot;: &quot;/dev/dm-4&quot;,                    &quot;size_bytes&quot;: 107374182400,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-4\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-4: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-5&quot;,                    &quot;name&quot;: &quot;dm-5&quot;,                    &quot;path&quot;: &quot;/dev/dm-5&quot;,                    &quot;size_bytes&quot;: 16609443840,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-5\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-5: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-6&quot;,                    &quot;name&quot;: &quot;dm-6&quot;,                    &quot;path&quot;: &quot;/dev/dm-6&quot;,                    &quot;size_bytes&quot;: 477232103424,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-6\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-6: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-7&quot;,                    &quot;name&quot;: &quot;dm-7&quot;,                    &quot;path&quot;: &quot;/dev/dm-7&quot;,                    &quot;size_bytes&quot;: 369857921024,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-7\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-7: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-8&quot;,                    &quot;name&quot;: &quot;dm-8&quot;,                    &quot;path&quot;: &quot;/dev/dm-8&quot;,                    &quot;size_bytes&quot;: 511705088,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-8\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-8: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/dm-9&quot;,                    &quot;name&quot;: &quot;dm-9&quot;,                    &quot;path&quot;: &quot;/dev/dm-9&quot;,                    &quot;size_bytes&quot;: 6576668672,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-9\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-9: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                },                {                    &quot;bootable&quot;: true,                    &quot;by_id&quot;: &quot;/dev/disk/by-id/nvme-eui.002538c571b05d4b&quot;,                    &quot;by_path&quot;: &quot;/dev/disk/by-path/pci-0000:3e:00.0-nvme-1&quot;,                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/disk/by-id/nvme-eui.002538c571b05d4b&quot;,                    &quot;model&quot;: &quot;SAMSUNG MZVKW512HMJP-000L7&quot;,                    &quot;name&quot;: &quot;nvme0n1&quot;,                    &quot;path&quot;: &quot;/dev/nvme0n1&quot;,                    &quot;serial&quot;: &quot;S35BNX0J505918&quot;,                    &quot;size_bytes&quot;: 512110190592,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/nvme0n1\&quot;],\&quot;exit_status\&quot;:0},\&quot;device\&quot;:{\&quot;name\&quot;:\&quot;/dev/nvme0n1\&quot;,\&quot;info_name\&quot;:\&quot;/dev/nvme0n1\&quot;,\&quot;type\&quot;:\&quot;nvme\&quot;,\&quot;protocol\&quot;:\&quot;NVMe\&quot;},\&quot;model_name\&quot;:\&quot;SAMSUNG MZVKW512HMJP-000L7\&quot;,\&quot;serial_number\&quot;:\&quot;S35BNX0J505918\&quot;,\&quot;firmware_version\&quot;:\&quot;7L6QCXA7\&quot;,\&quot;nvme_pci_vendor\&quot;:{\&quot;id\&quot;:5197,\&quot;subsystem_id\&quot;:5197},\&quot;nvme_ieee_oui_identifier\&quot;:9528,\&quot;nvme_total_capacity\&quot;:512110190592,\&quot;nvme_unallocated_capacity\&quot;:0,\&quot;nvme_controller_id\&quot;:2,\&quot;nvme_version\&quot;:{\&quot;string\&quot;:\&quot;1.2\&quot;,\&quot;value\&quot;:66048},\&quot;nvme_number_of_namespaces\&quot;:1,\&quot;nvme_namespaces\&quot;:[{\&quot;id\&quot;:1,\&quot;size\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;capacity\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;utilization\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;formatted_lba_size\&quot;:512,\&quot;eui64\&quot;:{\&quot;oui\&quot;:9528,\&quot;ext_id\&quot;:848015940939}}],\&quot;user_capacity\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;logical_block_size\&quot;:512,\&quot;local_time\&quot;:{\&quot;time_t\&quot;:1637498725,\&quot;asctime\&quot;:\&quot;Sun Nov 21 14:45:25 2021 IST\&quot;},\&quot;smart_status\&quot;:{\&quot;passed\&quot;:true,\&quot;nvme\&quot;:{\&quot;value\&quot;:0}},\&quot;nvme_smart_health_information_log\&quot;:{\&quot;critical_warning\&quot;:0,\&quot;temperature\&quot;:27,\&quot;available_spare\&quot;:100,\&quot;available_spare_threshold\&quot;:10,\&quot;percentage_used\&quot;:15,\&quot;data_units_read\&quot;:17934599,\&quot;data_units_written\&quot;:97148210,\&quot;host_reads\&quot;:463356329,\&quot;host_writes\&quot;:2453263768,\&quot;controller_busy_time\&quot;:15671,\&quot;power_cycles\&quot;:1517,\&quot;power_on_hours\&quot;:11110,\&quot;unsafe_shutdowns\&quot;:261,\&quot;media_errors\&quot;:0,\&quot;num_err_log_entries\&quot;:495,\&quot;warning_temp_time\&quot;:0,\&quot;critical_comp_time\&quot;:0,\&quot;temperature_sensors\&quot;:[27,40]},\&quot;temperature\&quot;:{\&quot;current\&quot;:27},\&quot;power_cycle_count\&quot;:1517,\&quot;power_on_time\&quot;:{\&quot;hours\&quot;:11110}}&quot;,                    &quot;wwn&quot;: &quot;eui.002538c571b05d4b&quot;                },                {                    &quot;drive_type&quot;: &quot;SSD&quot;,                    &quot;id&quot;: &quot;/dev/zram0&quot;,                    &quot;name&quot;: &quot;zram0&quot;,                    &quot;path&quot;: &quot;/dev/zram0&quot;,                    &quot;size_bytes&quot;: 4294967296,                    &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/zram0\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/zram0: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;                }            ],            &quot;gpus&quot;: [                {                    &quot;address&quot;: &quot;0000:01:00.0&quot;,                    &quot;device_id&quot;: &quot;13b1&quot;,                    &quot;name&quot;: &quot;GM107GLM [Quadro M1000M]&quot;,                    &quot;vendor&quot;: &quot;NVIDIA Corporation&quot;,                    &quot;vendor_id&quot;: &quot;10de&quot;                }            ],            &quot;hostname&quot;: &quot;${HOSTNAME}&quot;,            &quot;interfaces&quot;: [                {                    &quot;biosdevname&quot;: &quot;em1&quot;,                    &quot;flags&quot;: [                        &quot;up&quot;,                        &quot;broadcast&quot;,                        &quot;multicast&quot;                    ],                    &quot;has_carrier&quot;: true,                    &quot;ipv4_addresses&quot;: [                        &quot;10.100.102.22/24&quot;                    ],                    &quot;ipv6_addresses&quot;: [],                    &quot;mac_address&quot;: &quot;${MAC_ADDRESS2}&quot;,                    &quot;mtu&quot;: 1500,                    &quot;name&quot;: &quot;enp0s31f6&quot;,                    &quot;product&quot;: &quot;0x15b7&quot;,                    &quot;speed_mbps&quot;: 1000,                    &quot;vendor&quot;: &quot;0x8086&quot;                },                {                    &quot;biosdevname&quot;: &quot;p2p1&quot;,                    &quot;flags&quot;: [                        &quot;broadcast&quot;,                        &quot;multicast&quot;                    ],                    &quot;ipv4_addresses&quot;: [],                    &quot;ipv6_addresses&quot;: [],                    &quot;mac_address&quot;: &quot;${MAC_ADDRESS2}&quot;,                    &quot;mtu&quot;: 1500,                    &quot;name&quot;: &quot;wlp4s0&quot;,                    &quot;product&quot;: &quot;0x24f3&quot;,                    &quot;vendor&quot;: &quot;0x8086&quot;                }            ],            &quot;memory&quot;: {                &quot;physical_bytes&quot;: 34359738368,                &quot;usable_bytes&quot;: 33084645376            },            &quot;system_vendor&quot;: {                &quot;manufacturer&quot;: &quot;LENOVO&quot;,                &quot;product_name&quot;: &quot;${PRODUCT_NAME}&quot;,                &quot;serial_number&quot;: &quot;${SERIAL_NAME}&quot;            }        },        &quot;os_image_id&quot;: &quot;unknown&quot;    },    &quot;directive&quot;: &quot;registration&quot;,    &quot;message_id&quot;: &quot;${__UUID()}&quot;,    &quot;sent&quot;: &quot;2021-11-21T14:45:25.271+02:00&quot;,    &quot;type&quot;: &quot;data&quot;,    &quot;version&quot;: 1 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="REGISTRATION_FOLDER" elementType="Argument">
                  <stringProp name="Argument.name">REGISTRATION_FOLDER</stringProp>
                  <stringProp name="Argument.value">${REGISTRATION_FOLDER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CERTS_FOLDER" elementType="Argument">
                  <stringProp name="Argument.name">CERTS_FOLDER</stringProp>
                  <stringProp name="Argument.value">${CERTS_FOLDER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
            <stringProp name="SystemSampler.stdout">${REGISTRATION_FOLDER}/${DEVICE_ID}_register.out</stringProp>
            <stringProp name="SystemSampler.stderr">${REGISTRATION_FOLDER}/${DEVICE_ID}_register.err</stringProp>
          </SystemSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Device Registration HTTP Request" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;content&quot;: {&#xd;
       &quot;hardware&quot;: {&#xd;
           &quot;boot&quot;: {&#xd;
               &quot;current_boot_mode&quot;: &quot;bios&quot;&#xd;
           },&#xd;
           &quot;cpu&quot;: {&#xd;
               &quot;architecture&quot;: &quot;x86_64&quot;,&#xd;
               &quot;count&quot;: 8,&#xd;
               &quot;flags&quot;: [&#xd;
                   &quot;fpu&quot;,&#xd;
                   &quot;vme&quot;,&#xd;
                   &quot;de&quot;,&#xd;
                   &quot;pse&quot;,&#xd;
                   &quot;tsc&quot;,&#xd;
                   &quot;msr&quot;,&#xd;
                   &quot;pae&quot;,&#xd;
                   &quot;mce&quot;,&#xd;
                   &quot;cx8&quot;,&#xd;
                   &quot;apic&quot;,&#xd;
                   &quot;sep&quot;,&#xd;
                   &quot;mtrr&quot;,&#xd;
                   &quot;pge&quot;,&#xd;
                   &quot;mca&quot;,&#xd;
                   &quot;cmov&quot;,&#xd;
                   &quot;pat&quot;,&#xd;
                   &quot;pse36&quot;,&#xd;
                   &quot;clflush&quot;,&#xd;
                   &quot;dts&quot;,&#xd;
                   &quot;acpi&quot;,&#xd;
                   &quot;mmx&quot;,&#xd;
                   &quot;fxsr&quot;,&#xd;
                   &quot;sse&quot;,&#xd;
                   &quot;sse2&quot;,&#xd;
                   &quot;ss&quot;,&#xd;
                   &quot;ht&quot;,&#xd;
                   &quot;tm&quot;,&#xd;
                   &quot;pbe&quot;,&#xd;
                   &quot;syscall&quot;,&#xd;
                   &quot;nx&quot;,&#xd;
                   &quot;pdpe1gb&quot;,&#xd;
                   &quot;rdtscp&quot;,&#xd;
                   &quot;lm&quot;,&#xd;
                   &quot;constant_tsc&quot;,&#xd;
                   &quot;art&quot;,&#xd;
                   &quot;arch_perfmon&quot;,&#xd;
                   &quot;pebs&quot;,&#xd;
                   &quot;bts&quot;,&#xd;
                   &quot;rep_good&quot;,&#xd;
                   &quot;nopl&quot;,&#xd;
                   &quot;xtopology&quot;,&#xd;
                   &quot;nonstop_tsc&quot;,&#xd;
                   &quot;cpuid&quot;,&#xd;
                   &quot;aperfmperf&quot;,&#xd;
                   &quot;pni&quot;,&#xd;
                   &quot;pclmulqdq&quot;,&#xd;
                   &quot;dtes64&quot;,&#xd;
                   &quot;monitor&quot;,&#xd;
                   &quot;ds_cpl&quot;,&#xd;
                   &quot;vmx&quot;,&#xd;
                   &quot;smx&quot;,&#xd;
                   &quot;est&quot;,&#xd;
                   &quot;tm2&quot;,&#xd;
                   &quot;ssse3&quot;,&#xd;
                   &quot;sdbg&quot;,&#xd;
                   &quot;fma&quot;,&#xd;
                   &quot;cx16&quot;,&#xd;
                   &quot;xtpr&quot;,&#xd;
                   &quot;pdcm&quot;,&#xd;
                   &quot;pcid&quot;,&#xd;
                   &quot;sse4_1&quot;,&#xd;
                   &quot;sse4_2&quot;,&#xd;
                   &quot;x2apic&quot;,&#xd;
                   &quot;movbe&quot;,&#xd;
                   &quot;popcnt&quot;,&#xd;
                   &quot;tsc_deadline_timer&quot;,&#xd;
                   &quot;aes&quot;,&#xd;
                   &quot;xsave&quot;,&#xd;
                   &quot;avx&quot;,&#xd;
                   &quot;f16c&quot;,&#xd;
                   &quot;rdrand&quot;,&#xd;
                   &quot;lahf_lm&quot;,&#xd;
                   &quot;abm&quot;,&#xd;
                   &quot;3dnowprefetch&quot;,&#xd;
                   &quot;cpuid_fault&quot;,&#xd;
                   &quot;epb&quot;,&#xd;
                   &quot;invpcid_single&quot;,&#xd;
                   &quot;pti&quot;,&#xd;
                   &quot;ssbd&quot;,&#xd;
                   &quot;ibrs&quot;,&#xd;
                   &quot;ibpb&quot;,&#xd;
                   &quot;stibp&quot;,&#xd;
                   &quot;tpr_shadow&quot;,&#xd;
                   &quot;vnmi&quot;,&#xd;
                   &quot;flexpriority&quot;,&#xd;
                   &quot;ept&quot;,&#xd;
                   &quot;vpid&quot;,&#xd;
                   &quot;ept_ad&quot;,&#xd;
                   &quot;fsgsbase&quot;,&#xd;
                   &quot;tsc_adjust&quot;,&#xd;
                   &quot;bmi1&quot;,&#xd;
                   &quot;hle&quot;,&#xd;
                   &quot;avx2&quot;,&#xd;
                   &quot;smep&quot;,&#xd;
                   &quot;bmi2&quot;,&#xd;
                   &quot;erms&quot;,&#xd;
                   &quot;invpcid&quot;,&#xd;
                   &quot;rtm&quot;,&#xd;
                   &quot;mpx&quot;,&#xd;
                   &quot;rdseed&quot;,&#xd;
                   &quot;adx&quot;,&#xd;
                   &quot;smap&quot;,&#xd;
                   &quot;clflushopt&quot;,&#xd;
                   &quot;intel_pt&quot;,&#xd;
                   &quot;xsaveopt&quot;,&#xd;
                   &quot;xsavec&quot;,&#xd;
                   &quot;xgetbv1&quot;,&#xd;
                   &quot;xsaves&quot;,&#xd;
                   &quot;dtherm&quot;,&#xd;
                   &quot;ida&quot;,&#xd;
                   &quot;arat&quot;,&#xd;
                   &quot;pln&quot;,&#xd;
                   &quot;pts&quot;,&#xd;
                   &quot;hwp&quot;,&#xd;
                   &quot;hwp_notify&quot;,&#xd;
                   &quot;hwp_act_window&quot;,&#xd;
                   &quot;hwp_epp&quot;,&#xd;
                   &quot;md_clear&quot;,&#xd;
                   &quot;flush_l1d&quot;&#xd;
               ],&#xd;
               &quot;frequency&quot;: 3600,&#xd;
               &quot;model_name&quot;: &quot;Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz&quot;&#xd;
           },&#xd;
           &quot;disks&quot;: [&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-0&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-0&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-0&quot;,&#xd;
                   &quot;size_bytes&quot;: 511032950784,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-0\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-0: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-1&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-1&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-1&quot;,&#xd;
                   &quot;size_bytes&quot;: 117440512,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-1\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-1: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-10&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-10&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-10&quot;,&#xd;
                   &quot;size_bytes&quot;: 6576668672,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-10\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-10: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-2&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-2&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-2&quot;,&#xd;
                   &quot;size_bytes&quot;: 477232103424,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-2\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-2: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-3&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-3&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-3&quot;,&#xd;
                   &quot;size_bytes&quot;: 477232103424,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-3\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-3: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-4&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-4&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-4&quot;,&#xd;
                   &quot;size_bytes&quot;: 107374182400,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-4\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-4: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-5&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-5&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-5&quot;,&#xd;
                   &quot;size_bytes&quot;: 16609443840,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-5\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-5: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-6&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-6&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-6&quot;,&#xd;
                   &quot;size_bytes&quot;: 477232103424,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-6\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-6: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-7&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-7&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-7&quot;,&#xd;
                   &quot;size_bytes&quot;: 369857921024,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-7\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-7: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-8&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-8&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-8&quot;,&#xd;
                   &quot;size_bytes&quot;: 511705088,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-8\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-8: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/dm-9&quot;,&#xd;
                   &quot;name&quot;: &quot;dm-9&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/dm-9&quot;,&#xd;
                   &quot;size_bytes&quot;: 6576668672,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/dm-9\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/dm-9: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;bootable&quot;: true,&#xd;
                   &quot;by_id&quot;: &quot;/dev/disk/by-id/nvme-eui.002538c571b05d4b&quot;,&#xd;
                   &quot;by_path&quot;: &quot;/dev/disk/by-path/pci-0000:3e:00.0-nvme-1&quot;,&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/disk/by-id/nvme-eui.002538c571b05d4b&quot;,&#xd;
                   &quot;model&quot;: &quot;SAMSUNG MZVKW512HMJP-000L7&quot;,&#xd;
                   &quot;name&quot;: &quot;nvme0n1&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/nvme0n1&quot;,&#xd;
                   &quot;serial&quot;: &quot;S35BNX0J505918&quot;,&#xd;
                   &quot;size_bytes&quot;: 512110190592,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/nvme0n1\&quot;],\&quot;exit_status\&quot;:0},\&quot;device\&quot;:{\&quot;name\&quot;:\&quot;/dev/nvme0n1\&quot;,\&quot;info_name\&quot;:\&quot;/dev/nvme0n1\&quot;,\&quot;type\&quot;:\&quot;nvme\&quot;,\&quot;protocol\&quot;:\&quot;NVMe\&quot;},\&quot;model_name\&quot;:\&quot;SAMSUNG MZVKW512HMJP-000L7\&quot;,\&quot;serial_number\&quot;:\&quot;S35BNX0J505918\&quot;,\&quot;firmware_version\&quot;:\&quot;7L6QCXA7\&quot;,\&quot;nvme_pci_vendor\&quot;:{\&quot;id\&quot;:5197,\&quot;subsystem_id\&quot;:5197},\&quot;nvme_ieee_oui_identifier\&quot;:9528,\&quot;nvme_total_capacity\&quot;:512110190592,\&quot;nvme_unallocated_capacity\&quot;:0,\&quot;nvme_controller_id\&quot;:2,\&quot;nvme_version\&quot;:{\&quot;string\&quot;:\&quot;1.2\&quot;,\&quot;value\&quot;:66048},\&quot;nvme_number_of_namespaces\&quot;:1,\&quot;nvme_namespaces\&quot;:[{\&quot;id\&quot;:1,\&quot;size\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;capacity\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;utilization\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;formatted_lba_size\&quot;:512,\&quot;eui64\&quot;:{\&quot;oui\&quot;:9528,\&quot;ext_id\&quot;:848015940939}}],\&quot;user_capacity\&quot;:{\&quot;blocks\&quot;:1000215216,\&quot;bytes\&quot;:512110190592},\&quot;logical_block_size\&quot;:512,\&quot;local_time\&quot;:{\&quot;time_t\&quot;:1637498725,\&quot;asctime\&quot;:\&quot;Sun Nov 21 14:45:25 2021 IST\&quot;},\&quot;smart_status\&quot;:{\&quot;passed\&quot;:true,\&quot;nvme\&quot;:{\&quot;value\&quot;:0}},\&quot;nvme_smart_health_information_log\&quot;:{\&quot;critical_warning\&quot;:0,\&quot;temperature\&quot;:27,\&quot;available_spare\&quot;:100,\&quot;available_spare_threshold\&quot;:10,\&quot;percentage_used\&quot;:15,\&quot;data_units_read\&quot;:17934599,\&quot;data_units_written\&quot;:97148210,\&quot;host_reads\&quot;:463356329,\&quot;host_writes\&quot;:2453263768,\&quot;controller_busy_time\&quot;:15671,\&quot;power_cycles\&quot;:1517,\&quot;power_on_hours\&quot;:11110,\&quot;unsafe_shutdowns\&quot;:261,\&quot;media_errors\&quot;:0,\&quot;num_err_log_entries\&quot;:495,\&quot;warning_temp_time\&quot;:0,\&quot;critical_comp_time\&quot;:0,\&quot;temperature_sensors\&quot;:[27,40]},\&quot;temperature\&quot;:{\&quot;current\&quot;:27},\&quot;power_cycle_count\&quot;:1517,\&quot;power_on_time\&quot;:{\&quot;hours\&quot;:11110}}&quot;,&#xd;
                   &quot;wwn&quot;: &quot;eui.002538c571b05d4b&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;drive_type&quot;: &quot;SSD&quot;,&#xd;
                   &quot;id&quot;: &quot;/dev/zram0&quot;,&#xd;
                   &quot;name&quot;: &quot;zram0&quot;,&#xd;
                   &quot;path&quot;: &quot;/dev/zram0&quot;,&#xd;
                   &quot;size_bytes&quot;: 4294967296,&#xd;
                   &quot;smart&quot;: &quot;{\&quot;json_format_version\&quot;:[1,0],\&quot;smartctl\&quot;:{\&quot;version\&quot;:[7,2],\&quot;svn_revision\&quot;:\&quot;5155\&quot;,\&quot;platform_info\&quot;:\&quot;x86_64-linux-5.13.14-100.fc33.x86_64\&quot;,\&quot;build_info\&quot;:\&quot;(local build)\&quot;,\&quot;argv\&quot;:[\&quot;smartctl\&quot;,\&quot;--xall\&quot;,\&quot;--json=c\&quot;,\&quot;/dev/zram0\&quot;],\&quot;messages\&quot;:[{\&quot;string\&quot;:\&quot;/dev/zram0: Unable to detect device type\&quot;,\&quot;severity\&quot;:\&quot;error\&quot;}],\&quot;exit_status\&quot;:1}}&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;gpus&quot;: [&#xd;
               {&#xd;
                   &quot;address&quot;: &quot;0000:01:00.0&quot;,&#xd;
                   &quot;device_id&quot;: &quot;13b1&quot;,&#xd;
                   &quot;name&quot;: &quot;GM107GLM [Quadro M1000M]&quot;,&#xd;
                   &quot;vendor&quot;: &quot;NVIDIA Corporation&quot;,&#xd;
                   &quot;vendor_id&quot;: &quot;10de&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;hostname&quot;: &quot;${HOSTNAME}&quot;,&#xd;
           &quot;interfaces&quot;: [&#xd;
               {&#xd;
                   &quot;biosdevname&quot;: &quot;em1&quot;,&#xd;
                   &quot;flags&quot;: [&#xd;
                       &quot;up&quot;,&#xd;
                       &quot;broadcast&quot;,&#xd;
                       &quot;multicast&quot;&#xd;
                   ],&#xd;
                   &quot;has_carrier&quot;: true,&#xd;
                   &quot;ipv4_addresses&quot;: [&#xd;
                       &quot;10.100.102.22/24&quot;&#xd;
                   ],&#xd;
                   &quot;ipv6_addresses&quot;: [],&#xd;
                   &quot;mac_address&quot;: &quot;${MAC_ADDRESS2}&quot;,&#xd;
                   &quot;mtu&quot;: 1500,&#xd;
                   &quot;name&quot;: &quot;enp0s31f6&quot;,&#xd;
                   &quot;product&quot;: &quot;0x15b7&quot;,&#xd;
                   &quot;speed_mbps&quot;: 1000,&#xd;
                   &quot;vendor&quot;: &quot;0x8086&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;biosdevname&quot;: &quot;p2p1&quot;,&#xd;
                   &quot;flags&quot;: [&#xd;
                       &quot;broadcast&quot;,&#xd;
                       &quot;multicast&quot;&#xd;
                   ],&#xd;
                   &quot;ipv4_addresses&quot;: [],&#xd;
                   &quot;ipv6_addresses&quot;: [],&#xd;
                   &quot;mac_address&quot;: &quot;${MAC_ADDRESS2}&quot;,&#xd;
                   &quot;mtu&quot;: 1500,&#xd;
                   &quot;name&quot;: &quot;wlp4s0&quot;,&#xd;
                   &quot;product&quot;: &quot;0x24f3&quot;,&#xd;
                   &quot;vendor&quot;: &quot;0x8086&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;memory&quot;: {&#xd;
               &quot;physical_bytes&quot;: 34359738368,&#xd;
               &quot;usable_bytes&quot;: 33084645376&#xd;
           },&#xd;
           &quot;system_vendor&quot;: {&#xd;
               &quot;manufacturer&quot;: &quot;LENOVO&quot;,&#xd;
               &quot;product_name&quot;: &quot;${PRODUCT_NAME}&quot;,&#xd;
               &quot;serial_number&quot;: &quot;${SERIAL_NAME}&quot;&#xd;
           }&#xd;
       },&#xd;
       &quot;os_image_id&quot;: &quot;unknown&quot;&#xd;
   },&#xd;
   &quot;directive&quot;: &quot;registration&quot;,&#xd;
   &quot;message_id&quot;: &quot;${__UUID()}&quot;,&#xd;
   &quot;sent&quot;: &quot;2021-11-21T14:45:25.271+02:00&quot;,&#xd;
   &quot;type&quot;: &quot;data&quot;,&#xd;
   &quot;version&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HTTP_SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">${HTTP_SERVER_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/flotta-management/v1/data/${DEVICE_ID}/out</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Device Registration</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1477249802">200 OK</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify device was created successfully</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Label Device HTTP Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;metadata&quot;: {&#xd;
    &quot;labels&quot;: {&#xd;
      &quot;${LABEL_NAME}&quot;: &quot;${DEVICE_ID}&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${OCP_API_SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">${OCP_API_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apis/management.project-flotta.io/v1alpha1/namespaces/${NAMESPACE}/edgedevices/${DEVICE_ID}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Label device with &apos;region=emea&apos;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/merge-patch+json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__P(K8S_BEARER_TOKEN)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Get Updates for Edge Device - Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Get Updates OS Process Sampler" enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">/bin/bash</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">-c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${SCRIPTS_DIR}/get_device_update.sh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="REQUEST_PATH" elementType="Argument">
                  <stringProp name="Argument.name">REQUEST_PATH</stringProp>
                  <stringProp name="Argument.value">api/flotta-management/v1/data/${DEVICE_ID}/in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DEVICE_ID" elementType="Argument">
                  <stringProp name="Argument.name">DEVICE_ID</stringProp>
                  <stringProp name="Argument.value">${DEVICE_ID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="HTTP_SERVER" elementType="Argument">
                  <stringProp name="Argument.name">HTTP_SERVER</stringProp>
                  <stringProp name="Argument.value">${HTTP_SERVER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="HTTP_SERVER_PORT" elementType="Argument">
                  <stringProp name="Argument.name">HTTP_SERVER_PORT</stringProp>
                  <stringProp name="Argument.value">${HTTP_SERVER_PORT}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CERTS_FOLDER" elementType="Argument">
                  <stringProp name="Argument.name">CERTS_FOLDER</stringProp>
                  <stringProp name="Argument.value">${CERTS_FOLDER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
            <stringProp name="SystemSampler.stdout">${GET_UPDATES_FOLDER}/${DEVICE_ID}_get_updates.out</stringProp>
            <stringProp name="SystemSampler.stderr">${GET_UPDATES_FOLDER}/${DEVICE_ID}_get_updates.err</stringProp>
          </SystemSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Updates HTTP Request" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HTTP_SERVER}</stringProp>
            <stringProp name="HTTPSampler.port">${HTTP_SERVER_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/flotta-management/v1/data/${DEVICE_ID}/in</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Get Updates Constant Timer" enabled="true">
            <stringProp name="TestPlan.comments">Add delays between Get Updates requests</stringProp>
            <stringProp name="ConstantTimer.delay">15000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Send Heartbeats OS Process Sampler" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">/bin/bash</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">-c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">${SCRIPTS_DIR}/request_operator.sh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="REQUEST_PATH" elementType="Argument">
                <stringProp name="Argument.name">REQUEST_PATH</stringProp>
                <stringProp name="Argument.value">api/flotta-management/v1/data/${DEVICE_ID}/out</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="POST_BODY" elementType="Argument">
                <stringProp name="Argument.name">POST_BODY</stringProp>
                <stringProp name="Argument.value">{    &quot;content&quot;: {        &quot;events&quot;: [],        &quot;status&quot;: &quot;up&quot;,        &quot;time&quot;: &quot;2021-11-23T02:16:37.697+02:00&quot;,        &quot;version&quot;: &quot;278650&quot;,        &quot;workloads&quot;: []    },    &quot;directive&quot;: &quot;heartbeat&quot;,    &quot;message_id&quot;: &quot;${__UUID()}&quot;,    &quot;type&quot;: &quot;data&quot;,    &quot;version&quot;: 1 }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DEVICE_ID" elementType="Argument">
                <stringProp name="Argument.name">DEVICE_ID</stringProp>
                <stringProp name="Argument.value">${DEVICE_ID}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="HTTP_SERVER" elementType="Argument">
                <stringProp name="Argument.name">HTTP_SERVER</stringProp>
                <stringProp name="Argument.value">${HTTP_SERVER}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="HTTP_SERVER_PORT" elementType="Argument">
                <stringProp name="Argument.name">HTTP_SERVER_PORT</stringProp>
                <stringProp name="Argument.value">${HTTP_SERVER_PORT}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CERTS_FOLDER" elementType="Argument">
                  <stringProp name="Argument.name">CERTS_FOLDER</stringProp>
                  <stringProp name="Argument.value">${CERTS_FOLDER}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
          <stringProp name="SystemSampler.stdout">${HEARTBEAT_FOLDER}/${DEVICE_ID}_heartbeat.out</stringProp>
          <stringProp name="SystemSampler.stderr">${HEARTBEAT_FOLDER}/${DEVICE_ID}_heartbeat.err</stringProp>
        </SystemSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send Heartbeats HTTP Request" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;content&quot;: {&#xd;
       &quot;events&quot;: [],&#xd;
       &quot;status&quot;: &quot;up&quot;,&#xd;
       &quot;time&quot;: &quot;2021-11-23T02:16:37.697+02:00&quot;,&#xd;
       &quot;version&quot;: &quot;278650&quot;,&#xd;
       &quot;workloads&quot;: []&#xd;
   },&#xd;
   &quot;directive&quot;: &quot;heartbeat&quot;,&#xd;
   &quot;message_id&quot;: &quot;${__UUID()}&quot;,&#xd;
   &quot;type&quot;: &quot;data&quot;,&#xd;
   &quot;version&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HTTP_SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${HTTP_SERVER_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/flotta-management/v1/data/${DEVICE_ID}/out</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Send Heartbeats</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Get Updates Constant Timer" enabled="false">
        <stringProp name="TestPlan.comments">Add delays between iterations</stringProp>
        <stringProp name="ConstantTimer.delay">15000</stringProp>
      </ConstantTimer>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
